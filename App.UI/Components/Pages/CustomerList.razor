@page "/customers"
@using global::App.Library.Models
@using global::App.UI.Services
@inject CustomerService CustomerService
@inject NavigationManager Navigation

<h3>Customer List</h3>

@if (CustomersDto == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-primary border rounded-1">
        <thead>
            <tr>
                <th scope="col">Customer ID</th>
                <th scope="col">First Name</th>
                <th scope="col">Middle Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Email</th>
                <th scope="col">Phone</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in CustomersDto)
            {
                <tr>
                    <td class="align-middle">@customer.CustomerId</td>
                    <td class ="align-middle">@customer.FirstName</td>
                    <td class ="align-middle">@customer.MiddleName</td>
                    <td class="align-middle">@customer.LastName</td>
                    <td class="align-middle">@customer.Email</td>
                    <td class="align-middle">@customer.Phone</td>
                    <td class="align-middle">
                        <button @onclick="() => EditCustomer(customer.CustomerId)" class="btn btn-link bi bi-person-gear" style="font-size: 1.5rem; "></button>
                        <button @onclick="() => DeleteCustomer(customer.CustomerId)" class="btn btn-link bi bi-person-dash" style="font-size: 1.5rem; "></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CustomerDto> CustomersDto;

    protected override async Task OnInitializedAsync()
    {
        CustomersDto = await CustomerService.GetCustomersAsync();
    }

    private void EditCustomer(Guid id)
    {
        Navigation.NavigateTo($"/customer/{id}");
    }

    private async Task DeleteCustomer(Guid id)
    {
        await CustomerService.DeleteCustomerAsync(id);
        CustomersDto = await CustomerService.GetCustomersAsync();
    }
}
